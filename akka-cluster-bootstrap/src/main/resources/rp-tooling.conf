akka {
  actor {
    provider = cluster
  }

  cluster {
    bootstrap {
      contact-point-discovery {
        discovery-method = akka.discovery.reactive-lib
      }
    }

    http.management {
      hostname = ${?RP_ENDPOINT_AKKA_MGMT_HTTP_BIND_HOST}
      port = ${?RP_ENDPOINT_AKKA_MGMT_HTTP_BIND_PORT}
    }
  }

  discovery {
    reactive-lib {
      class = com.lightbend.rp.akkaclusterbootstrap.ClusterServiceDiscovery

      resolve-interval = 1 second

      resolve-timeout = 2 second
    }

    reactive-lib-kubernetes {
      class = com.lightbend.rp.akkaclusterbootstrap.kubernetes.ClusterServiceDiscovery

      resolve-interval = 1 second

      resolve-timeout = 2 second
    }
  }

  extensions += "com.lightbend.rp.akkaclusterbootstrap.ClusterBootstrap"

  remote {
    netty.tcp {
      hostname = ${?RP_ENDPOINT_AKKA_REMOTE_HOST}
      port = ${?RP_ENDPOINT_AKKA_REMOTE_PORT}

      bind-hostname = ${?RP_ENDPOINT_AKKA_REMOTE_BIND_HOST}
      bind-port = ${?RP_ENDPOINT_AKKA_REMOTE_BIND_PORT}
    }
  }
}

lagom {
  cluster {
    exit-jvm-when-system-terminated = on
    join-self = off
  }
}
